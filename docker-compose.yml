services:
  backend:
    restart: unless-stopped
    build: ./backend
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    depends_on:
      backend_db:
        condition: service_healthy

  backend_db:
    image: postgres:17-alpine
    restart: unless-stopped
    volumes:
      - backend_db_volume:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=$POSTGRES_PASSWORD pg_isready -U $POSTGRES_USER -d $POSTGRES_DB -p $POSTGRES_PORT"]
      interval: 10s
      timeout: 5s
      retries: 5

  gateway:
    restart: unless-stopped
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1/" ]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  backend_db_volume: